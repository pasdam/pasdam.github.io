<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Protoc on /dev/null</title><link>https://pasdam.github.io/tags/protoc/</link><description>Recent content in Protoc on /dev/null</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 24 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://pasdam.github.io/tags/protoc/index.xml" rel="self" type="application/rss+xml"/><item><title>Use gRPC/protobuf with C++ and Go</title><link>https://pasdam.github.io/blog/posts/grpc_qt_go/</link><pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate><guid>https://pasdam.github.io/blog/posts/grpc_qt_go/</guid><description>&lt;p>In this guide I will show you how to use &lt;a href="http://www.grpc.io/" rel="external"
 target="_blank" >gRPC&lt;/a> to write a simple client (in C++) and server (in Go) for your service.&lt;/p>
&lt;p>For this tutorial we will use the code available in the following Github project:Â &lt;a href="https://github.com/pasdam/grpcExample" rel="external"
 target="_blank" >pasdam/grpcExample&lt;/a>.&lt;/p>
&lt;p>For the client, in this article I&amp;rsquo;ll show how to write a command line one, but in the repository there is also a GUI client written with the &lt;a href="https://www.qt.io" rel="external"
 target="_blank" >Qt framework&lt;/a>.&lt;/p></description></item></channel></rss>