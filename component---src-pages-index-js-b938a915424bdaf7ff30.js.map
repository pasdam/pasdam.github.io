{"version":3,"sources":["webpack:///./src/components/blog/postsList.js","webpack:///./src/pages/index.js","webpack:///./src/components/blog/listEntry.js"],"names":["PostsList","posts","filter","post","node","frontmatter","date","map","key","id","excerpt","timeToRead","path","fields","slug","require","IndexPage","data","metadata","site","siteMetadata","allMarkdownRemark","edges","pageQuery","ListEntry","firstChar","title","charAt","className","styles","letter","to","subtitle","dangerouslySetInnerHTML","__html"],"mappings":"uIAYeA,EARG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKpB,OAJAA,EAAQA,EACNC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,IAAD,CAAWK,IAAKL,EAAKC,KAAKK,GAAIC,QAASP,EAAKC,KAAKM,QAASL,YAAaF,EAAKC,KAAKC,YAAaM,WAAYR,EAAKC,KAAKO,WAAYC,KAAMT,EAAKC,KAAKS,OAAOC,UAE9J,6BAAOb,ICTf,0CAMAc,EAAQ,KAQOC,UANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAD,CAAQC,SAAWD,EAAKE,KAAKC,cAC5B,kBAAC,EAAD,CAAWnB,MAAQgB,EAAKI,kBAAkBC,UAF5C,IAQaC,EAAS,a,iCChBtB,+CAoBeC,IAfG,SAAC,GAAgD,IAA9Cd,EAA6C,EAA7CA,QAASL,EAAoC,EAApCA,YAAaM,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAChDa,EAAYpB,EAAYqB,MAAMC,OAAO,GAE3C,OACA,iCACC,4BACC,0BAAMC,UAAYC,IAAOC,QAAUL,GACnC,kBAAC,IAAD,CAAMG,UAAYC,IAAOH,MAAOK,GAAInB,GAAOP,EAAYqB,QAExD,yBAAKE,UAAYC,IAAOG,UAAY3B,EAAYC,KAAhD,MAA+DK,EAA/D,aACA,yBAAKsB,wBAAyB,CAAEC,OAAQxB","file":"component---src-pages-index-js-b938a915424bdaf7ff30.js","sourcesContent":["import React from \"react\";\n\nimport ListEntry from \"./listEntry.js\";\n\nconst PostsList = ({ posts }) => {\n\tposts = posts\n\t\t.filter(post => !!post.node.frontmatter.date)\n\t\t.map(post => <ListEntry key={post.node.id} excerpt={post.node.excerpt} frontmatter={post.node.frontmatter} timeToRead={post.node.timeToRead} path={post.node.fields.slug}/>);\n\n\treturn <div>{ posts}</div>;\n};\n\nexport default PostsList\n","import React from \"react\";\nimport { graphql } from \"gatsby\"\n\nimport Layout from '../components/layout'\nimport PostsList from \"../components/blog/postsList.js\";\n\nrequire(\"prismjs/themes/prism.css\");\n\nconst IndexPage = ({ data }) => (\n\t<Layout metadata={ data.site.siteMetadata }>\n\t\t<PostsList posts={ data.allMarkdownRemark.edges }/>\n\t</Layout>\n)\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n\tquery IndexQuery {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\texcerpt(format: HTML)\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tpath\n\t\t\t\t\t\ttitle\n\t\t\t\t\t}\n\t\t\t\t\ttimeToRead\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;","import React from \"react\";\nimport { Link } from \"gatsby\"\n\nimport styles from \"./listEntry.module.css\"\n\nconst ListEntry = ({ excerpt, frontmatter, timeToRead, path }) => {\n\tconst firstChar = frontmatter.title.charAt(0);\n\n\treturn (\n\t<article>\n\t\t<h2>\n\t\t\t<span className={ styles.letter }>{firstChar}</span>\n\t\t\t<Link className={ styles.title} to={path}>{frontmatter.title}</Link>\n\t\t</h2>\n\t\t<div className={ styles.subtitle }>{frontmatter.date} &mdash; {timeToRead} Min Read</div>\n\t\t<div dangerouslySetInnerHTML={{ __html: excerpt }} />\n\t</article>\n  )\n}\n\nexport default ListEntry;"],"sourceRoot":""}