{"data":{"site":{"siteMetadata":{"disqusShortname":"pasdam-github-io","title":"/dev/null"}},"markdownRemark":{"id":"0a13342c-1ee7-5fd1-a7e1-87aabf42d423","frontmatter":{"date":"November 23, 2018","title":"Install DataDog Agent as a docker container","tags":["cloud","DataDog","Docker","metrics","monitoring"]},"html":"<p><a href=\"https://www.datadoghq.com/\">DataDog</a> is a monitoring service for cloud-scale applications, in the following we'll se how to create a docker container with the <a href=\"https://docs.datadoghq.com/agent/?tab=agentv6\">DataDog agent</a> and how to use it to publish metrics.</p>\n<h1 id=\"requirements\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h1>\n<p>In the following article we assume that yuo have:</p>\n<ul>\n<li>a <a href=\"https://www.datadoghq.com/\">DataDog</a> account with a valid API key; you can get the key from <a href=\"https://app.datadoghq.com/account/settings#api\">Integrations > API</a>;</li>\n<li><a href=\"https://docs.docker.com/install/\">Docker installed</a>.</li>\n</ul>\n<h1 id=\"setup-docker-container\"><a href=\"#setup-docker-container\" aria-label=\"setup docker container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup docker container</h1>\n<p>As first thing, we create an evironment variable that we'll use to pass the API key to the docker container:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">DD_API_KEY<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>API_KEY<span class=\"token operator\">></span></code></pre></div>\n<p>Then we run the container with the agent with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker run --rm -d -v /var/run/docker.sock:/var/run/docker.sock:ro -v /proc/:/host/proc/:ro -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro -e DD_API_KEY<span class=\"token operator\">=</span><span class=\"token variable\">$DD_API_KEY</span> --name dd-agent datadog/agent:latest</code></pre></div>\n<p>The previous command should be enough for the most common cases, but if for specific reasons you need to send metrics from your host machine to the <a href=\"https://docs.datadoghq.com/agent/?tab=agentv6\">DataDog agent</a>, you should run the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run \\\n    --rm \\\n    -d \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /proc/:/host/proc/:ro \\\n    -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \\\n    -e DD_API_KEY<span class=\"token operator\">=</span><span class=\"token variable\">$DD_API_KEY</span> \\\n    -e DD_DOGSTATSD_NON_LOCAL_TRAFFIC<span class=\"token operator\">=</span>true \\\n    -p 8125:8125/udp \\\n    --name dd-agent \\\n    datadog/agent:latest</code></pre></div>\n<p>This way the container port is exposed to the local machine.</p>\n<p>You can refer to the <a href=\"https://docs.datadoghq.com/agent/basic_agent_usage/docker/\">official documentation</a> for more specific configurations.</p>\n<h1 id=\"test-the-agent\"><a href=\"#test-the-agent\" aria-label=\"test the agent permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test the agent</h1>\n<p>In order to test if the agent works properly we're going to <a href=\"https://help.datadoghq.com/hc/en-us/articles/206441345-Send-metrics-and-events-using-dogstatsd-and-the-shell\">send a custom metric from the command line</a>.</p>\n<p>If the container exposes the port to the host, it is possible to use one the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Linux</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">></span> /dev/udp/localhost/8125\n<span class=\"token comment\"># macOS</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">nc</span> -4u -w0 localhost 8125</code></pre></div>\n<p>It is also possible to send a metric from within the container itself:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># open a shell in the container</span>\ndocker <span class=\"token function\">exec</span> -i -t dd-agent /bin/bash\n\n<span class=\"token comment\"># send the custom metrics using the container's shell</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">></span> /dev/udp/localhost/8125</code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/blog/datadog_agent_docker/#requirements\">Requirements</a></li>\n<li><a href=\"/blog/datadog_agent_docker/#setup-docker-container\">Setup docker container</a></li>\n<li><a href=\"/blog/datadog_agent_docker/#test-the-agent\">Test the agent</a></li>\n</ul>","timeToRead":2,"fields":{"slug":"/blog/datadog_agent_docker/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}