{"data":{"site":{"siteMetadata":{"title":"/dev/null","description":"Personal blog, which mainly contains tutorial on how to perform specific development tasks","keywords":"blog, software, engineering, development"}},"allMarkdownRemark":{"edges":[{"node":{"id":"1b172462-7f7d-5c4c-bdc3-629d1d6f0bd4","excerpt":"<p>There are <a href=\"https://www.gatsbyjs.org/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/\">different ways</a> to add a comments section to your blog, in this guide we will focus on how to use <a href=\"https://disqus.com\">Disqus</a> to enable users to leave comments on a blog generated with <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a>.</p>\n","frontmatter":{"date":"April 27, 2019","path":"gatsbyjs_add_diqus_comments","title":"Add Disqus comments to a GatsbyJS static blog"},"timeToRead":1,"fields":{"slug":"/blog/gatsbyjs_add_diqus_comments/"}}},{"node":{"id":"ab149feb-18f0-5fc2-aa2b-e00d11c53dc5","excerpt":"<p>In this brief tutorial we'll see how to remove old versions of java from macOS.</p>\n<p>First we need to list all the installed version using the command <code class=\"language-text\">/usr/libexec/java_home -V</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ /usr/libexec/java_home -V\nMatching Java Virtual Machines <span class=\"token punctuation\">(</span>5<span class=\"token punctuation\">)</span>:\n    11.0.2, x86_64:\t<span class=\"token string\">\"Java SE 11.0.2\"</span>\t/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home\n    10.0.2, x86_64:\t<span class=\"token string\">\"Java SE 10.0.2\"</span>\t/Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk/Contents/Home\n    1.8.0_181, x86_64:\t<span class=\"token string\">\"Java SE 8\"</span>         /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home\n    1.6.0_65-b14-468, x86_64:\t<span class=\"token string\">\"Java SE 6\"</span>\t/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home\n    1.6.0_65-b14-468, i386:\t<span class=\"token string\">\"Java SE 6\"</span>\t/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</code></pre></div>\n<p>It will list all the installed versions (JRE and JDK) with the related path.</p>\n<p>Next and last thing to do is to remove the version we don't need anymore with the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /Library/Java/JavaVirtualMachines/<span class=\"token operator\">&lt;</span>version_to_remove<span class=\"token operator\">></span></code></pre></div>\n<p>For instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /Library/Java/JavaVirtualMachines/1.6.0.jdk</code></pre></div>\n<p>Then it will result in:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ /usr/libexec/java_home -V\nMatching Java Virtual Machines <span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">)</span>:\n    11.0.2, x86_64:\t<span class=\"token string\">\"Java SE 11.0.2\"</span>\t/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home\n    1.8.0_181, x86_64:\t<span class=\"token string\">\"Java SE 8\"</span>\t/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home</code></pre></div>","frontmatter":{"date":"February 11, 2019","path":"remove_old_java_macos","title":"Uninstall older versions of Java from macOS"},"timeToRead":1,"fields":{"slug":"/blog/remove_old_java_macos/"}}},{"node":{"id":"7eeba190-86e3-5603-9ce8-1aaf4c17649f","excerpt":"<p>In this guide I will show you how to use a different SSH key for each domain.</p>\n<h2 id=\"requirements\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h2>\n<ul>\n<li>SSH.</li>\n</ul>\n<h2 id=\"creates-keys\"><a href=\"#creates-keys\" aria-label=\"creates keys permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creates keys</h2>\n<p>Following <a href=\"https://linux-audit.com/using-ed25519-openssh-keys-instead-of-dsa-rsa-ecdsa/\">best practices</a>, you should always favor <a href=\"https://en.wikipedia.org/wiki/EdDSA\">ED25519</a> SSH keys, since they are more secure and have better performance over the other types.</p>\n<p>The command is:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -t ed25519 -C <span class=\"token string\">\"email@example.com\"</span></code></pre></div>\n<p>In order to have a different key for each domain, my pattern is actually:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -t ed25519 -C <span class=\"token string\">\"&lt;my_name>@&lt;domain>\"</span></code></pre></div>\n<p>for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ssh-keygen -t ed25519 -C <span class=\"token string\">\"pasdam@mydomain.com\"</span>\nGenerating public/private ed25519 key pair.\nEnter <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token function\">which</span> to save the key <span class=\"token punctuation\">(</span>/Users/username/.ssh/id_ed25519<span class=\"token punctuation\">)</span>: /Users/username/.ssh/mydomain.com\nEnter passphrase <span class=\"token punctuation\">(</span>empty <span class=\"token keyword\">for</span> no passphrase<span class=\"token punctuation\">)</span>:\nEnter same passphrase again:\nYour identification has been saved <span class=\"token keyword\">in</span> /Users/username/.ssh/mydomain.com.\nYour public key has been saved <span class=\"token keyword\">in</span> /Users/username/.ssh/mydomain.com.pub.</code></pre></div>\n<p>For an extra layer of security you could specify a password for the private key, but that would mean to have to enter it everytime you want to use the key.</p>\n<p>If you prefer the old RSA keys, because for instance you have to login on a legacy system that doesn't support <a href=\"https://en.wikipedia.org/wiki/EdDSA\">ED25519</a>, you can generate the key pair with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -o -t rsa -b 4096 -C <span class=\"token string\">\"email@example.com\"</span></code></pre></div>\n<p>Once created the key pair, you can store the public one into the service/server you want to access.</p>\n<p>For instance to open an SSH connection to a VPS just run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> <span class=\"token operator\">&lt;</span>username<span class=\"token operator\">></span>@<span class=\"token operator\">&lt;</span>domain_or_ip<span class=\"token operator\">></span> -i <span class=\"token operator\">&lt;</span>private_key<span class=\"token operator\">></span></code></pre></div>\n<p>i.e.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> pasdam@mydomain.com -i ~/.ssh/mydomain.com</code></pre></div>\n<p>Note: if you only have one key, the last part (<code class=\"language-text\">-i ~/.ssh/mydomain.com</code>) is not needed.</p>\n<h2 id=\"configure-ssh\"><a href=\"#configure-ssh\" aria-label=\"configure ssh permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure SSH</h2>\n<p>Instead of specifying for each domain which key to use everytime we use the <code class=\"language-text\">ssh</code> command, we can configure it to automatically load the correct one.</p>\n<p>To do so, we need to create/edit the file <a href=\"https://www.ssh.com/ssh/config/\">~/.ssh/config</a>. In it there should be an entry for each domain/host:</p>\n<div class=\"gatsby-highlight\" data-language=\"config\"><pre class=\"language-config\"><code class=\"language-config\">IdentityFile ~/.ssh/deault\n\nHost github.com\n    HostName github.com\n    AddKeysToAgent yes\n    UseKeychain yes\n    IdentityFile ~/.ssh/github\n\nHost mydomain1.com\n    HostName mydomain1.com\n    AddKeysToAgent yes\n    UseKeychain yes\n    User myuser\n    IdentityFile ~/.ssh/mydomain1\n\nHost mydomain2.com\n    HostName mydomain2.com\n    AddKeysToAgent yes\n    UseKeychain yes\n    User myuser\n    IdentityFile ~/.ssh/mydomain2</code></pre></div>\n<p>To note, for some hosts the username is specified, so that it would be possible to create an ssh connection using only the domain, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> mydomain1.com</code></pre></div>\n<p>instead of:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> myuser@mydomain1.com</code></pre></div>","frontmatter":{"date":"December 12, 2018","path":"ssh_multiple_keys_config","title":"How to use different SSH keys"},"timeToRead":2,"fields":{"slug":"/blog/ssh_multiple_keys_config/"}}},{"node":{"id":"0a13342c-1ee7-5fd1-a7e1-87aabf42d423","excerpt":"<p><a href=\"https://www.datadoghq.com/\">DataDog</a> is a monitoring service for cloud-scale applications, in the following we'll se how to create a docker container with the <a href=\"https://docs.datadoghq.com/agent/?tab=agentv6\">DataDog agent</a> and how to use it to publish metrics.</p>\n<h2 id=\"requirements\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h2>\n<p>In the following article we assume that yuo have:</p>\n<ul>\n<li>a <a href=\"https://www.datadoghq.com/\">DataDog</a> account with a valid API key; you can get the key from <a href=\"https://app.datadoghq.com/account/settings#api\">Integrations > API</a>;</li>\n<li><a href=\"https://docs.docker.com/install/\">Docker installed</a>.</li>\n</ul>\n<h2 id=\"setup-docker-container\"><a href=\"#setup-docker-container\" aria-label=\"setup docker container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup docker container</h2>\n<p>As first thing, we create an environment variable that we'll use to pass the API key to the docker container:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">DD_API_KEY<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>API_KEY<span class=\"token operator\">></span></code></pre></div>\n<p>Then we run the container with the agent with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker run --rm -d -v /var/run/docker.sock:/var/run/docker.sock:ro -v /proc/:/host/proc/:ro -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro -e DD_API_KEY<span class=\"token operator\">=</span><span class=\"token variable\">$DD_API_KEY</span> --name dd-agent datadog/agent:latest</code></pre></div>\n<p>The previous command should be enough for the most common cases, but if for specific reasons you need to send metrics from your host machine to the <a href=\"https://docs.datadoghq.com/agent/?tab=agentv6\">DataDog agent</a>, you should run the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run \\\n    --rm \\\n    -d \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /proc/:/host/proc/:ro \\\n    -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \\\n    -e DD_API_KEY<span class=\"token operator\">=</span><span class=\"token variable\">$DD_API_KEY</span> \\\n    -e DD_DOGSTATSD_NON_LOCAL_TRAFFIC<span class=\"token operator\">=</span>true \\\n    -p 8125:8125/udp \\\n    --name dd-agent \\\n    datadog/agent:latest</code></pre></div>\n<p>This way the container port is exposed to the local machine.</p>\n<p>You can refer to the <a href=\"https://docs.datadoghq.com/agent/basic_agent_usage/docker/\">official documentation</a> for more specific configurations.</p>\n<h1 id=\"test-the-agent\"><a href=\"#test-the-agent\" aria-label=\"test the agent permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test the agent</h1>\n<p>In order to test if the agent works properly we're going to <a href=\"https://help.datadoghq.com/hc/en-us/articles/206441345-Send-metrics-and-events-using-dogstatsd-and-the-shell\">send a custom metric from the command line</a>.</p>\n<p>If the container exposes the port to the host, it is possible to use one the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Linux</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">></span> /dev/udp/localhost/8125\n<span class=\"token comment\"># macOS</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">nc</span> -4u -w0 localhost 8125</code></pre></div>\n<p>It is also possible to send a metric from within the container itself:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># open a shell in the container</span>\ndocker <span class=\"token function\">exec</span> -i -t dd-agent /bin/bash\n\n<span class=\"token comment\"># send the custom metrics using the container's shell</span>\n<span class=\"token keyword\">echo</span> -n <span class=\"token string\">\"custom_metric:20|g|#shell\"</span> <span class=\"token operator\">></span> /dev/udp/localhost/8125</code></pre></div>","frontmatter":{"date":"November 23, 2018","path":"datadog_agent_as_docker_container","title":"Install DataDog Agent as a docker container"},"timeToRead":2,"fields":{"slug":"/blog/datadog_agent_docker/"}}},{"node":{"id":"ee1289c6-0c06-571d-b5ee-3a9a7fb9ab51","excerpt":"<p>In this guide I will show you how to use <a href=\"http://www.grpc.io/\">gRPC</a> to write a simple client (in C++) and server (in Go) for your service.</p>\n<p>For this tutorial we will use the code available in the following Github project: <a href=\"https://github.com/pasdam/grpcExample\">pasdam/grpcExample</a>.</p>\n<p>For the client, in this article I'll show how to write a command line one, but in the repository there is also a GUI client written with the <a href=\"https://www.qt.io\">Qt framework</a>.</p>\n<h2 id=\"requirements\"><a href=\"#requirements\" aria-label=\"requirements permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements</h2>\n<ul>\n<li>gRPC 1.4.2;</li>\n<li>Go 1.8.3;</li>\n<li>Protobuf 3.3.2;</li>\n<li>g++.</li>\n</ul>\n<p>Note: the code might works also with previous versions, but it was tested only with the specified ones.</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<p>To install the C++ version on MacOS, if you have brew installed just open a terminal and execute:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> grpc pkg-config</code></pre></div>\n<p>it will install also the protobuf compiler, protoc.</p>\n<p>Now we need to install the go plugin with the command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go get -u github.com/golang/protobuf/protoc-gen-go</code></pre></div>\n<p>For other language-specific installation instructions for gRPC runtime, please refer to the <a href=\"https://github.com/grpc/grpc/blob/master/INSTALL.md\">official guide</a>.</p>\n<h2 id=\"project\"><a href=\"#project\" aria-label=\"project permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project</h2>\n<p>The folders structure is be the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">- client\n  |- cli\n  |- core\n  |- qt\n- protocol\n- server</code></pre></div>\n<p>In the <em>client/cli</em> folder we will create the command line c++ client, whereas the Qt one is in <em>client/qt</em>; common files will be stored in <em>client/core</em>. The <em>protocol</em> folder will contains the proto/grpc definitions. And finally the <em>server</em> directory will contains the server written in Go.</p>\n<h3 id=\"proto\"><a href=\"#proto\" aria-label=\"proto permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proto</h3>\n<p>We are going to define a simple greeting service in the file <em>protocol/greeting.proto</em>:</p>\n<p><div id=\"gist91274060\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-greeting-proto\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-protocol-buffer \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-greeting-proto-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-greeting-proto-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">syntax</span> = <span class=\"pl-s\">&quot;proto3&quot;</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-greeting-proto-LC2\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-greeting-proto-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">package</span> <span class=\"pl-en\">example</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-greeting-proto-LC4\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-greeting-proto-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">service</span> <span class=\"pl-en\">Greeter</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-greeting-proto-LC6\" class=\"blob-code blob-code-inner js-file-line\">    rpc Hello (GreetingRequest) returns (GreetingReply) {}</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-greeting-proto-LC7\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-greeting-proto-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-greeting-proto-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">message</span> <span class=\"pl-en\">GreetingRequest</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-greeting-proto-LC10\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">string</span> <span class=\"pl-smi\">name</span> = <span class=\"pl-c1\">1</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-greeting-proto-LC11\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-greeting-proto-LC12\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-greeting-proto-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">message</span> <span class=\"pl-en\">GreetingReply</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-greeting-proto-LC14\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">string</span> <span class=\"pl-smi\">text</span> = <span class=\"pl-c1\">1</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeting-proto-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-greeting-proto-LC15\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/pasdam/98fb5343cb2ed9c3be55148413ae755b/raw/3018ad54524a99fb20210390fe9198108256d45e/greeting.proto\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/pasdam/98fb5343cb2ed9c3be55148413ae755b#file-greeting-proto\">greeting.proto</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>This service has only one method that accept a string parameter and replies with another string.</p>\n<p>Then we need to generate the code to use on both the client and the server, so from the project root execute the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">PROTOS_PATH<span class=\"token operator\">=</span>./protocol\nOUT_DIR<span class=\"token operator\">=</span>./gen\nOUT_GO<span class=\"token operator\">=</span><span class=\"token variable\">$OUT_DIR</span>/go\n<span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$OUT_GO</span>\nprotoc -I <span class=\"token variable\">$PROTOS_PATH</span> --cpp_out<span class=\"token operator\">=</span><span class=\"token variable\">$OUT_DIR</span> --go_out<span class=\"token operator\">=</span>plugins<span class=\"token operator\">=</span>grpc:<span class=\"token variable\">$OUT_GO</span> --grpc_out<span class=\"token operator\">=</span><span class=\"token variable\">$OUT_DIR</span> --plugin<span class=\"token operator\">=</span>protoc-gen-grpc<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">which</span> grpc_cpp_plugin<span class=\"token variable\">`</span></span> protocol/*.proto</code></pre></div>\n<p>and then compile it:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> <span class=\"token variable\">$OUT_DIR</span>\ng++ -I/usr/local/include -pthread -std<span class=\"token operator\">=</span>c++11 -c *.cc</code></pre></div>\n<p>Note: On Windows, for the last command the include path should be changed.</p>\n<h3 id=\"server\"><a href=\"#server\" aria-label=\"server permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Server</h3>\n<p>The next step is to implement the service in Go, in the file <em>server/main.go</em>:</p>\n<p><div id=\"gist91273852\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-main-go\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-go \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-main-go-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-main-go-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">package</span> main</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-main-go-LC2\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-main-go-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import</span> (</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-main-go-LC4\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>log<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-main-go-LC5\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>net<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-main-go-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-main-go-LC7\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>../gen/go<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-main-go-LC8\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>golang.org/x/net/context<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-main-go-LC9\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>google.golang.org/grpc<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-main-go-LC10\" class=\"blob-code blob-code-inner js-file-line\">)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-main-go-LC11\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-main-go-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">type</span> greetingServer <span class=\"pl-k\">struct</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-main-go-LC13\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-main-go-LC14\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-main-go-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> Returns a greeting message</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-main-go-LC16\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">func</span> <span class=\"pl-en\">(<span class=\"pl-v\">g</span> *<span class=\"pl-v\">greetingServer</span>) <span class=\"pl-en\">Hello</span></span>(<span class=\"pl-v\">ctx</span> <span class=\"pl-v\">context</span>.<span class=\"pl-v\">Context</span>, <span class=\"pl-v\">r</span> *<span class=\"pl-v\">example</span>.<span class=\"pl-v\">GreetingRequest</span>) (*<span class=\"pl-v\">example</span>.<span class=\"pl-v\">GreetingReply</span>, <span class=\"pl-v\">error</span>) {</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-main-go-LC17\" class=\"blob-code blob-code-inner js-file-line\">\tlog.<span class=\"pl-c1\">Println</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Hello called<span class=\"pl-pds\">&quot;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-main-go-LC18\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">return</span> &amp;example.<span class=\"pl-smi\">GreetingReply</span>{Text: <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Hello <span class=\"pl-pds\">&quot;</span></span> + r.<span class=\"pl-smi\">Name</span>}, <span class=\"pl-c1\">nil</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-main-go-LC19\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-main-go-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-main-go-LC21\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">func</span> <span class=\"pl-en\">main</span>() {</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-main-go-LC22\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-smi\">lis</span>, <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> net.<span class=\"pl-c1\">Listen</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>tcp<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>localhost:9001<span class=\"pl-pds\">&quot;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-main-go-LC23\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-k\">if</span> err != <span class=\"pl-c1\">nil</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-main-go-LC24\" class=\"blob-code blob-code-inner js-file-line\">\t\t<span class=\"pl-c1\">panic</span>(err)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-main-go-LC25\" class=\"blob-code blob-code-inner js-file-line\">\t}</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-main-go-LC26\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-main-go-LC27\" class=\"blob-code blob-code-inner js-file-line\">\tlog.<span class=\"pl-c1\">Println</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Starting server<span class=\"pl-pds\">&quot;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-main-go-LC28\" class=\"blob-code blob-code-inner js-file-line\">\t<span class=\"pl-smi\">s</span> <span class=\"pl-k\">:=</span> grpc.<span class=\"pl-c1\">NewServer</span>()</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-main-go-LC29\" class=\"blob-code blob-code-inner js-file-line\">\texample.<span class=\"pl-c1\">RegisterGreeterServer</span>(s, &amp;greetingServer{})</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-main-go-LC30\" class=\"blob-code blob-code-inner js-file-line\">\ts.<span class=\"pl-c1\">Serve</span>(lis)</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-go-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-main-go-LC31\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/pasdam/d05af20fdb57da156af62ea914396611/raw/5cc42a533e23daa5e5617be2d5cb7c77072ee872/main.go\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/pasdam/d05af20fdb57da156af62ea914396611#file-main-go\">main.go</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>Nothing complex here, just a couple of things: first we implemented the RPC method, that simply takes the input string and reply prepending \"Hello \" to that. In the <em>main</em> method the first thing we have to do is to specify the port on which the server should respond (we will use it later with the client). Then the last thing to do is to create the server, register the greeting service and start serving the requests.</p>\n<p>To run the server just use the following command from the project root:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> server\ngo get <span class=\"token comment\"># optional</span>\ngo run main.go</code></pre></div>\n<p>Note: the <code class=\"language-text\">go get</code> command is optional, and it's required only the first time to force the download of all dependencies (all the imported packages).</p>\n<h3 id=\"client\"><a href=\"#client\" aria-label=\"client permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client</h3>\n<p>As first thing we will create a wrapper for the stub, that will hide all the complexity for each RPC call.</p>\n<p><div id=\"gist91274181\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-greeterclientcli-h\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-greeterclientcli-h-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-greeterclientcli-h-LC1\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">ifndef</span> __CLIENT_CLI_H_</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-greeterclientcli-h-LC2\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">define</span> <span class=\"pl-en\">__CLIENT_CLI_H_</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-greeterclientcli-h-LC3\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-greeterclientcli-h-LC4\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>iostream<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-greeterclientcli-h-LC5\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>string<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-greeterclientcli-h-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-greeterclientcli-h-LC7\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>grpc++/grpc++.h<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-greeterclientcli-h-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-greeterclientcli-h-LC9\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>../../gen/greeting.grpc.pb.h<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-greeterclientcli-h-LC10\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-greeterclientcli-h-LC11\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> grpc::Channel;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-greeterclientcli-h-LC12\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> grpc::ClientContext;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-greeterclientcli-h-LC13\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> grpc::Status;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-greeterclientcli-h-LC14\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> example::GreetingRequest;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-greeterclientcli-h-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> example::GreetingReply;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-greeterclientcli-h-LC16\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">using</span> example::Greeter;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-greeterclientcli-h-LC17\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-greeterclientcli-h-LC18\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">GreeterClientCli</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-greeterclientcli-h-LC19\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">public:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-greeterclientcli-h-LC20\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-en\">GreeterClientCli</span>(std::shared_ptr&lt;Channel&gt; channel) : stub_(Greeter::NewStub(channel)) {}</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-greeterclientcli-h-LC21\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-greeterclientcli-h-LC22\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Assembles the client&#39;s payload, sends it and presents the response back</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-greeterclientcli-h-LC23\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> from the server.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-greeterclientcli-h-LC24\" class=\"blob-code blob-code-inner js-file-line\">    std::string <span class=\"pl-en\">hello</span>(<span class=\"pl-k\">const</span> std::string&amp; name) {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-greeterclientcli-h-LC25\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Data we are sending to the server.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-greeterclientcli-h-LC26\" class=\"blob-code blob-code-inner js-file-line\">        GreetingRequest request;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-greeterclientcli-h-LC27\" class=\"blob-code blob-code-inner js-file-line\">        request.<span class=\"pl-c1\">set_name</span>(name);</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-greeterclientcli-h-LC28\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-greeterclientcli-h-LC29\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Container for the data we expect from the server.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-greeterclientcli-h-LC30\" class=\"blob-code blob-code-inner js-file-line\">        GreetingReply reply;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-greeterclientcli-h-LC31\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-greeterclientcli-h-LC32\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Context for the client. It could be used to convey extra information to</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-greeterclientcli-h-LC33\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> the server and/or tweak certain RPC behaviors.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-greeterclientcli-h-LC34\" class=\"blob-code blob-code-inner js-file-line\">        ClientContext context;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-greeterclientcli-h-LC35\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-greeterclientcli-h-LC36\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> The actual RPC.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-greeterclientcli-h-LC37\" class=\"blob-code blob-code-inner js-file-line\">        Status status = stub_-&gt;<span class=\"pl-c1\">Hello</span>(&amp;context, request, &amp;reply);</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-greeterclientcli-h-LC38\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"></td>\n        <td id=\"file-greeterclientcli-h-LC39\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Act upon its status.</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"></td>\n        <td id=\"file-greeterclientcli-h-LC40\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">if</span> (status.<span class=\"pl-c1\">ok</span>()) {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"></td>\n        <td id=\"file-greeterclientcli-h-LC41\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">return</span> reply.<span class=\"pl-c1\">text</span>();</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"></td>\n        <td id=\"file-greeterclientcli-h-LC42\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"></td>\n        <td id=\"file-greeterclientcli-h-LC43\" class=\"blob-code blob-code-inner js-file-line\">        } <span class=\"pl-k\">else</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"></td>\n        <td id=\"file-greeterclientcli-h-LC44\" class=\"blob-code blob-code-inner js-file-line\">            std::cout &lt;&lt; status.<span class=\"pl-c1\">error_code</span>() &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>: <span class=\"pl-pds\">&quot;</span></span> &lt;&lt; status.<span class=\"pl-c1\">error_message</span>() &lt;&lt; std::endl;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"></td>\n        <td id=\"file-greeterclientcli-h-LC45\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>RPC failed<span class=\"pl-pds\">&quot;</span></span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"></td>\n        <td id=\"file-greeterclientcli-h-LC46\" class=\"blob-code blob-code-inner js-file-line\">        }</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"></td>\n        <td id=\"file-greeterclientcli-h-LC47\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"></td>\n        <td id=\"file-greeterclientcli-h-LC48\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"></td>\n        <td id=\"file-greeterclientcli-h-LC49\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">private:</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"></td>\n        <td id=\"file-greeterclientcli-h-LC50\" class=\"blob-code blob-code-inner js-file-line\">    std::unique_ptr&lt;Greeter::Stub&gt; stub_;</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"></td>\n        <td id=\"file-greeterclientcli-h-LC51\" class=\"blob-code blob-code-inner js-file-line\">};</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"></td>\n        <td id=\"file-greeterclientcli-h-LC52\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-greeterclientcli-h-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"></td>\n        <td id=\"file-greeterclientcli-h-LC53\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">endif</span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> __CLIENT_CLI_H_</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/pasdam/5cc0b4f15ca136485a90da2f528760d2/raw/c4fd693d78b2ab0c72fb3b9c71219705fc727af1/GreeterClientCli.h\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/pasdam/5cc0b4f15ca136485a90da2f528760d2#file-greeterclientcli-h\">GreeterClientCli.h</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>In particular in the <code class=\"language-text\">hello</code> method we create the gRPC request and its context, then we perform the RPC and retrieve the response.</p>\n<p>One thing to notice: this class holds a reference to a stub of the service, created in the constructor using a specified <a href=\"https://grpc.io/docs/guides/concepts.html#channels\">channel</a> (more on this later). Such stub is used to deliver the request to the actual service, and hides all the communication logic (i.e. serialization/deserialization).</p>\n<p>The command line client is quite simple: it consists of a small <code class=\"language-text\">main</code> method that reads from the standard input, executes the request and prints the result:</p>\n<p><div id=\"gist91274999\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-main-c\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-c \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-main-c-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-main-c-LC1\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>iostream<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-main-c-LC2\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>memory<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-main-c-LC3\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>string<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-main-c-LC4\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-main-c-LC5\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>grpc++/grpc++.h<span class=\"pl-pds\">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-main-c-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-main-c-LC7\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>../core/GreeterClientCli.h<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-main-c-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-main-c-LC9\" class=\"blob-code blob-code-inner js-file-line\">#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>../../gen/greeting.grpc.pb.h<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-main-c-LC10\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-main-c-LC11\" class=\"blob-code blob-code-inner js-file-line\">using grpc::Channel;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-main-c-LC12\" class=\"blob-code blob-code-inner js-file-line\">using grpc::ClientContext;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-main-c-LC13\" class=\"blob-code blob-code-inner js-file-line\">using grpc::Status;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-main-c-LC14\" class=\"blob-code blob-code-inner js-file-line\">using example::GreetingRequest;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-main-c-LC15\" class=\"blob-code blob-code-inner js-file-line\">using example::GreetingReply;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-main-c-LC16\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-main-c-LC17\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">int</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">int</span> argc, <span class=\"pl-k\">char</span>** argv) {</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-main-c-LC18\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Instantiate the client. It requires a channel, out of which the actual RPCs</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-main-c-LC19\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> are created. This channel models a connection to an endpoint (in this case,</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-main-c-LC20\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> localhost at port 9001). We indicate that the channel isn&#39;t authenticated</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-main-c-LC21\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> (use of InsecureChannelCredentials()).</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-main-c-LC22\" class=\"blob-code blob-code-inner js-file-line\">    GreeterClientCli <span class=\"pl-smi\">greeter</span>(<span class=\"pl-c1\">grpc::CreateChannel</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>localhost:9001<span class=\"pl-pds\">&quot;</span></span>, <span class=\"pl-c1\">grpc::InsecureChannelCredentials</span>()));</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-main-c-LC23\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-main-c-LC24\" class=\"blob-code blob-code-inner js-file-line\">    std::cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Insert name: <span class=\"pl-pds\">&quot;</span></span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-main-c-LC25\" class=\"blob-code blob-code-inner js-file-line\">    std::string user;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-main-c-LC26\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">std::getline</span>(std::cin, user);</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-main-c-LC27\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-main-c-LC28\" class=\"blob-code blob-code-inner js-file-line\">    std::string reply = greeter.<span class=\"pl-c1\">hello</span>(user);</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-main-c-LC29\" class=\"blob-code blob-code-inner js-file-line\">    std::cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>Greeter received: <span class=\"pl-pds\">&quot;</span></span> &lt;&lt; reply &lt;&lt; std::endl;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-main-c-LC30\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-main-c-LC31\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">0</span>;</td>\n      </tr>\n      <tr>\n        <td id=\"file-main-c-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-main-c-LC32\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/pasdam/8293dec389e09391ac5b6d9eacd748d6/raw/9db3a0e40e6945422dae96445fa6c281280ab3e2/main.c\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/pasdam/8293dec389e09391ac5b6d9eacd748d6#file-main-c\">main.c</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<p>The only thing to notice here is the <a href=\"https://grpc.io/docs/guides/concepts.html#channels\">channel</a> creation: we specified the address (<code class=\"language-text\">localhost:9001</code>), and configure it not to use TLS/SSL.</p>\n<p>Next step is to compile the code with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">g++ -I/usr/local/include -pthread -std<span class=\"token operator\">=</span>c++11 -c -o <span class=\"token variable\">$OUT_DIR</span>/client-cli.o client/cli/main.cpp\ng++ <span class=\"token variable\">$OUT_DIR</span>/greeting.pb.o <span class=\"token variable\">$OUT_DIR</span>/greeting.grpc.pb.o <span class=\"token variable\">$OUT_DIR</span>/client-cli.o -L/usr/local/lib <span class=\"token variable\"><span class=\"token variable\">`</span>pkg-config --libs grpc++ grpc<span class=\"token variable\">`</span></span> -lgrpc++_reflection -lprotobuf -lpthread -ldl -o <span class=\"token variable\">$OUT_DIR</span>/client-cli</code></pre></div>\n<p>And finally we can execute the client with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token variable\">$OUT_DIR</span>/client-cli\nInsert name: Thor\nGreeter received: Hello Thor</code></pre></div>","frontmatter":{"date":"July 24, 2017","path":"grpc_qt_go","title":"Use gRPC/protobuf with C++ and Go"},"timeToRead":10,"fields":{"slug":"/blog/grpc_qt_go/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}