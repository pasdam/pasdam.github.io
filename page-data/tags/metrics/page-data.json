{"componentChunkName":"component---src-templates-tag-js","path":"/tags/metrics/","result":{"data":{"site":{"siteMetadata":{"title":"/dev/null"}},"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"id":"89fec80c-e226-5612-90fc-c844fcab0444","excerpt":"<p><a href=\"https://grafana.com/\">Grafana</a> is a great tool to create dashboards to\nvisualize data, it can use different sources to pull data from. In this article\nwe're going to use <a href=\"https://prometheus.io/\">Prometheus</a> for this role.</p>\n<p>We won't investigate all the features of it, for example it can be used\nfor alerting as well, but in this post we're going to use it simply as a data\nsource.</p>\n<p>We're going to setup the whole stack using docker-compose. For the impatient the\ncode is in a\n<a href=\"https://github.com/pasdam/docker-stack-grafana-prometheus\">github repo</a>.</p>\n","frontmatter":{"date":"2020-04-18","title":"Configure Grafana to pull metrics from Prometheus"},"timeToRead":5,"fields":{"slug":"/blog/metrics_with_grafana_prometheus_and_docker/"}}},{"node":{"id":"c1a46924-67b0-5e83-b375-c52ae074671b","excerpt":"<p><a href=\"https://www.datadoghq.com/\">DataDog</a> is a monitoring service for cloud-scale applications, in the following guide we'll see how to create a docker container with the <a href=\"https://docs.datadoghq.com/agent/?tab=agentv6\">DataDog agent</a> and how to use it to publish custom metrics.</p>\n","frontmatter":{"date":"2018-11-23","title":"Install DataDog Agent as a docker container"},"timeToRead":2,"fields":{"slug":"/blog/datadog_agent_docker/"}}}]}},"pageContext":{"tag":"metrics"}}}